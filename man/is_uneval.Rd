% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/aesthetics-handling.r
\name{is_uneval}
\alias{is_uneval}
\title{Determine if an argument is an unevaluated expression}
\usage{
is_uneval(arg)
}
\arguments{
\item{arg}{the input object to be tested}
}
\value{
\code{TRUE} if the value is of type \code{name}, \code{call} or \code{expression}
}
\description{
An argument is considered unevaluated if it returns \code{TRUE} for any of
\code{is.name()}, \code{is.call()} or \code{is.expression()}
}
\note{
This function may prove to be a heavy limitation of ggpackets if it is
unable to accommodate custom unevaluated expression classes. Input on how
best to handle such cases is welcome, but until a global solution is found,
feedback on what other classes to consider is appreciated.
}
\examples{
ggpackets:::is_uneval(as.symbol('test'))
ggpackets:::is_uneval('test')

}
\seealso{
\code{\link[=allowed_aesthetics]{allowed_aesthetics()}}, \code{\link[=filter_aesthetics]{filter_aesthetics()}},
\code{\link[=remove_aesthetics]{remove_aesthetics()}}, \code{\link[=flatten_aesthetics_to_group]{flatten_aesthetics_to_group()}}, \code{\link[=add_eqv_aes]{add_eqv_aes()}},
\code{\link[=split_aes_from_dots]{split_aes_from_dots()}}, \code{\link[=is_uneval]{is_uneval()}}
}
\keyword{aes}
\keyword{aesthetics}
